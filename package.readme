package.readme

On a suitably setup machine, eg
apt install devscripts rpm rpmlint 

Pull down the code from gitlab,
cd cbindings
refresh source (use a script that gets only relevent files from Lazarus -
	$> bash ./refresh.bash
	$> cd cbindings; 
	## remove any existing library and symlinks
	$> qmake -qt=qt5;  make   (wait ....)
	$> cd package; 
	## update the whatsnew file, maybe from Z's commits.
	## remove any existing packages
	$> DEBEMAIL=YOUR-EMAIL-ADDRESS bash ./package-lib	

Then do a git add, commit and push as necessary.
From github page, make new release, upload as necessary, release.



---------- Legacy Methods, disregard ---------------- 


make <enter>
(wait awhile)
strip libQt5Pas.so.1.2.8

update the version file

cd package
bash ./deb-package
bash ./rpm-package

test

Easy to let github tag the release, create the Release Page, assign an 
appropriate tag and it will be created when Release is released.
 
# back in the top level dir _
# git tag -a v1.2.8
# git push --tags

In the github page, 'releases', 'draft new release'.
Some text, add the generated packages, 'publish'.
back in packages :
rm *.deb *.rpm *.gz
Maybe clean up the working directories ...


rm -Rf tmp

Must update every 60 days to keep workflow running.

