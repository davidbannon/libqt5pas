# This is a basic workflow to help you get started with Actions

name: Build push events (debug mode)

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch

on: 

#on:                 disable all triggers except manual
#  pull_request:
#  push:
#    paths-ignore:
#    - "README.md"
#    branches:
#      - master
#      - releases/*
  workflow_dispatch:
        
env:
  SOURCE: 'libQt6Pas_src'

jobs:
  build:
    name: ${{ matrix.config.name }}
    
    runs-on: ${{ matrix.config.os }}
    
    defaults:
      run:
        shell: bash 
        
    strategy:
      fail-fast: false
      matrix:
        config:
#          - os: ubuntu-20.04
#            name: 'Linux 64'
          - os: windows-2022
            name: 'Windows 64'
            # qt-version: '6.2.4'
            qt-version: '5.12.*'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
      with:
        path: '${{ env.SOURCE }}'

    - name: Cache Qt (windows only)
      if: contains( matrix.config.os, 'windows')
      id: cache-qt
      uses: actions/cache@v3
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache-${{ matrix.config.qt-version }}
        
    - name: Install Qt on Windows
      if: contains( matrix.config.os, 'windows')
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.config.qt-version }}
        arch: win64_mingw
        cache: ${{ steps.cache-qt.outputs.cache-hit }}
                
 #   - name: Check QT version (only 6.2.*)
 #     run: |
 #       qmake6 -query | grep "QT_VERSION:6\.2" > qt_version.txt;
 #       if ! [ -s qt_version.txt ]; then 
 #         exit 1
 #       fi

    - name: Building libQt5Pas
      run: |
        cd ${{ env.SOURCE }}/cbindings
        qmake -query
        qmake -qt=qt5 
        make -j2

    - name: Upload the Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: libQt6Pas
        path: |
          ${{ env.SOURCE }}/qt_version.txt
          ${{ env.SOURCE }}/cbindings/libQt6Pas*
          ${{ env.SOURCE }}/cbindings/package/libqt6pas*

